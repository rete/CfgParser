/// \file CfgParser.hh
 /*
 *
 * CfgParser.hh header template generated by fclass
 * Creation date : jeu. juin 6 2013
 *
 * This file is part of CfgParser libraries.
 *
 * CfgParser is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * CfgParser is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with CfgParser.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author : Eté Rémi
 * @version 0.1.0 13/08/2013
 * @copyright 2013 Eté Rémi
 *
 */

#ifndef CFGPARSER_HH
#define CFGPARSER_HH

#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>
#include <sstream>
#include <map>
#include <vector>
#include <algorithm>


// cfgparser includes
#include "Section.hh"
#include "ParserStatus.hh"
#include "StrOp.hh"
#include "RawCfgParser.hh"


namespace cfgparser {




	class ChainSection {

		public:

			/*!
			 *
			 *
			 *
			 */
			ChainSection()
				: sectionCollection( new SectionCollection() ) {}

			/*!
			 *
			 *
			 *
			 */
			~ChainSection() {

				sectionCollection->clear();
				delete sectionCollection;
			}

			/*!
			 *
			 *
			 *
			 */
			void AddSection( Section *sec )
				{ sectionCollection->push_back( sec ); }

			/*!
			 *
			 *
			 *
			 */
			StatusCode GetValue( const std::string &option , std::string *value ) const;

			/*!
			 *
			 *
			 *
			 */
			StringCollection GetOptions() const;

			/*!
			 *
			 *
			 *
			 */
			bool HasOption( const std::string &opt ) const;


		// private members
		private:
			SectionCollection *sectionCollection;


	};

	/*!
	 *
	 * @brief  CfgParser class
	 *
	 */

	class CfgParser : public RawCfgParser {


		// public member functions
		public :

			/*!
			 *
			 * @brief Default constructor
			 *
			 */
			CfgParser();

			/*!
			 *
			 * @brief  Get a string value with a given section name and option name
			 *
			 */
			virtual StatusCode GetValue( const std::string& section , const std::string &key, std::string *value , bool raw = false , Section *vars = 0 ) const;



		// protected members
		protected:

//			static const int MAX_INTERPOLATION_DEPTH;


		// protected member functions
		protected:

			/*!
			 *
			 *
			 *
			 */
			StatusCode Interpolate( const std::string &str , const ChainSection *chainSection , std::string *value ) const;

	};


}  //  end namespace cfgparser


#endif  // CFGPARSER_HH
