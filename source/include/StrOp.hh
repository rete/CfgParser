/// \file StrOp.hh
/*
 *
 * StrOp.hh header template generated by fclass
 * Creation date : Mon Apr 15 15:17:05 2013
 *
 * This file is part of CfgParser libraries.
 *
 * CfgParser is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * CfgParser is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with CfgParser.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author : Eté Rémi
 * @version 0.1.0 13/08/2013
 * @copyright 2013 Eté Rémi
 *
 */


#ifndef STROP_HH
#define STROP_HH

#include <iostream>
#include <fstream>
#include <string>
#include <list>
#include <cstdlib>
#include <sstream>
#include <map>
#include <vector>

#include "ParserStatus.hh"

namespace cfgparser {


	/*!
	 *
	 * @brief  Normalize the name
	 *
	 */
	void NormalizeName( std::string *str );


	/*!
	 *
	 * @brief  Trim leading and trailing spaces from the string 'str'
	 *
	 */
	void StrTrim( std::string *str );

	/*!
	 *
	 * @brief  Trim trailing spaces from the string 'str'
	 *
	 */
	void RStrTrim( std::string *str );

	/*!
	 *
	 * @brief  Split the string in many string portion
	 * separated by a given delimiter
	 *
	 */
	std::vector<std::string> Split( const std::string &str , const char delimiter = ' ' , int maxSplit = -1 );

	/*!
	 *
	 * @brief  Lower the string
	 *
	 */
	std::string ToLower( const std::string &str );

	/*!
	 *
	 * @brief  Upper the string
	 *
	 */
	std::string ToUpper( const std::string &str );

	/*!
	 *
	 * @brief  Find the section name in a complete
	 * line of cfgparser file
	 *
	 */
	StatusCode GroupSectionName( const std::string &completeSectionLine , std::string &sectionName );

	/*!
	 *
	 * @brief  Find an option, its separator and its
	 * associated value from a complete line of cfgparser file
	 *
	 */
	StatusCode GroupOptionSeparatorAndValue( const std::string &parserLine , std::string &option , std::string &separator , std::string &value );

	/*!
	 *
	 * @brief  Various typedefs
	 *
	 */
	typedef std::vector<std::string> StringCollection;
	typedef std::vector<const std::string> ConstStringCollection;


}  //  end namespace cfgparser

#endif  // STROP_HH
